# Relative folder to module to use for specific targets
# include_dir:
#   ann:             annlib/include
#   annlib_adaptbx:  annlib_adaptbx/include

# Automatic extra dependencies
dependencies:
  ann: [annlib_adaptbx, scitbx]
  cctbx: [boost]
  _pycbf: [hdf5_c, cbf]
  cbf: [hdf5_c, scitbx]
  cctbx_large_scale_merging_ext: eigen
  cctbx_xray_ext: fable
  dxtbx_ext: boost_python   # dxtbx_ext seems to be missing the link to boost_python in the libtbx build
  dxtbx_format_nexus_ext: boost_python
  dxtbx_format_image_ext: boost_python
  iotbx_shelx_ext: fable
  rstbx: [annlib_adaptbx]
  scitbx_examples_bevington_ext: eigen
  scitbx_lbfgs_ext: fable
  legacy_scale: [annlib_adaptbx]
  xfel_mono_sim: [annlib_adaptbx]
  hybrid_36_fem: [fable, iotbx] # iotbx needed for auto-regeneration
  sdrive_fem: [fable, scitbx] # Scitbx needed for auto-regeneration
  ccp4io: scitbx
  cma_es_ext: scitbx
  cbf: pcre
  # Things built as static on OSX miss out on dependency listings.
  iotbx_mtz: ccp4io
  scitbx_boost_python: boost_python
  rstbx: [cctbx, annlib_adaptbx]
  mmtbx_masks: [cctbx, cctbx_sgtbx_asu, omptbx]
  asymmetric_map: [cctbx, cctbx_sgtbx_asu, iotbx_xplor, omptbx]
  iotbx_mtz: [ccp4io, cctbx]
  smtbx_refinement_constraints_ext: [cctbx, scitbx_boost_python, smtbx_refinement_constraints]
  smtbx_refinement_constraints: scitbx
  boost_adaptbx_boost_thread_test_ext: boost_thread
  rstbx: ann
  dxtbxspotfinder: spotfinder # This is a definitely missing dependency that relies on undefined
  legacy_scale: ann
  xfel_mono_sim: ann

# Change the root location of certain libraries. This handles problems 
# determining the 'proper' location e.g. annlib uses sources from annlib_adaptbx
# but we still want it in the annlib folder. Other targets with only 'generated'
# sources are also easier to hard-code here
forced_locations:
  ann: annlib
  cbf: cbflib
  cma_es_ext: cctbx_project/cma_es
  gltbx_util_ext: cctbx_project/gltbx
  hybrid_36_fem: cctbx_project/iotbx/pdb
  sdrive_fem: cctbx_project/scitbx/lbfgs
  iotbx_cif_ext: cctbx_project/iotbx/cif/boost_python
  # ccp4io: ccp4io

# Folder to use (instead of PWD/..) for specific target/module include paths
# This allows handling of packages with 'standard' layout. Prepend
# paths with:
#       #build for explicit build-relative dependence only
#       #base  for explicit root-relative dependence only
#       ! as a prefix to indicate a private dependence
target_includes:
  annlib: [include]
  cbflib: include
  # Last entry required if in scons-config e.g. no annlib module and all sources in it
  # referenced from within annlib_adaptbx
  annlib_adaptbx: [include, "#build/annlib_adaptbx/include/"] #, "#base/annlib/include"]
  ccp4io: ["#base/ccp4io", "#base/ccp4io/libccp4/ccp4"]
  cbf: ["!."]
  iotbx_cif_ext: ["!#base/cctbx_project/ucif/antlr3/include", "!#base/cctbx_project/ucif/antlr3"]
  fable: "."
  ann: ["#base/annlib/include"]
  cbf: ["#base/cbflib/include", "#base/cbflib"]
  tntbx: [".", "include"]

# List of files generated during build, but not via the usual mechanisms. These
# will require special case handling, but listing them here lets us know this
other_generated:
  - ccp4io_adaptbx/ccp4_diskio_f.c
  - ccp4io_adaptbx/ccp4_general.c
  - ccp4io_adaptbx/ccp4_general_f.c
  - ccp4io_adaptbx/ccp4_parser_f.c
  - ccp4io_adaptbx/ccp4_program.c
  - ccp4io_adaptbx/ccp4_unitcell_f.c
  - ccp4io_adaptbx/cmaplib_f.c
  - ccp4io_adaptbx/cmtzlib_f.c
  - ccp4io_adaptbx/csymlib_f.c
  - ccp4io_adaptbx/library_f.c
  - ccp4io_adaptbx/csymlib.c

# List of files generated by the libtbx refresh process. This allows any 
# created system to know when files need to be generated
libtbx_refresh:
  scitbx: 
    - include/scitbx/array_family/detail/operator_functors.h
    - include/scitbx/array_family/detail/std_imports.h
    - include/scitbx/array_family/operator_traits_builtin.h
    - include/scitbx/array_family/ref_algebra.h
    - include/scitbx/array_family/ref_apply.h
    - include/scitbx/array_family/shared_algebra.h
    - include/scitbx/array_family/shared_apply.h
    - include/scitbx/array_family/shared_plain_apply.h
    - include/scitbx/array_family/shared_reductions.h
    - include/scitbx/array_family/small_algebra.h
    - include/scitbx/array_family/small_apply.h
    - include/scitbx/array_family/small_plain_apply.h
    - include/scitbx/array_family/small_reductions.h
    - include/scitbx/array_family/tiny_algebra.h
    - include/scitbx/array_family/tiny_apply.h
    - include/scitbx/array_family/tiny_plain_apply.h
    - include/scitbx/array_family/tiny_reductions.h
    - include/scitbx/array_family/versa_algebra.h
    - include/scitbx/array_family/versa_apply.h
    - include/scitbx/array_family/versa_plain_apply.h
    - include/scitbx/array_family/versa_reductions.h
    - include/scitbx/array_family/boost_python/flex_fwd.h
    - include/scitbx/lbfgs_fem.hpp
    - scitbx/lbfgs/lbfgs_fem.cpp
    - scitbx/lbfgs/sdrive_fem.cpp
  cctbx:
    - cctbx/eltbx/henke.cpp
    - cctbx/eltbx/henke_tables_01_12.cpp
    - cctbx/eltbx/henke_tables_13_24.cpp
    - cctbx/eltbx/henke_tables_25_36.cpp
    - cctbx/eltbx/henke_tables_37_48.cpp
    - cctbx/eltbx/henke_tables_49_60.cpp
    - cctbx/eltbx/henke_tables_61_72.cpp
    - cctbx/eltbx/henke_tables_73_84.cpp
    - cctbx/eltbx/henke_tables_85_92.cpp
    - cctbx/eltbx/sasaki.cpp
    - cctbx/eltbx/sasaki_tables_01_12.cpp
    - cctbx/eltbx/sasaki_tables_13_24.cpp
    - cctbx/eltbx/sasaki_tables_25_36.cpp
    - cctbx/eltbx/sasaki_tables_37_48.cpp
    - cctbx/eltbx/sasaki_tables_49_60.cpp
    - cctbx/eltbx/sasaki_tables_61_72.cpp
    - cctbx/eltbx/sasaki_tables_73_82.cpp
    - include/cctbx/boost_python/flex_fwd.h
  annlib_adaptbx:
    - annlib_adaptbx/include/ANNSELF_INCLUDE/ANN.h
    - annlib_adaptbx/include/ANNSELF_INCLUDE/ANNperf.h
    - annlib_adaptbx/include/ANNSELF_INCLUDE/ANNx.h
    - annlib_adaptbx/self_include/ANN.cpp
    - annlib_adaptbx/self_include/bd_fix_rad_search.cpp
    - annlib_adaptbx/self_include/bd_pr_search.cpp
    - annlib_adaptbx/self_include/bd_search.cpp
    - annlib_adaptbx/self_include/bd_tree.cpp
    - annlib_adaptbx/self_include/bd_tree.h
    - annlib_adaptbx/self_include/brute.cpp
    - annlib_adaptbx/self_include/kd_dump.cpp
    - annlib_adaptbx/self_include/kd_fix_rad_search.cpp
    - annlib_adaptbx/self_include/kd_fix_rad_search.h
    - annlib_adaptbx/self_include/kd_pr_search.cpp
    - annlib_adaptbx/self_include/kd_pr_search.h
    - annlib_adaptbx/self_include/kd_search.cpp
    - annlib_adaptbx/self_include/kd_search.h
    - annlib_adaptbx/self_include/kd_split.cpp
    - annlib_adaptbx/self_include/kd_split.h
    - annlib_adaptbx/self_include/kd_tree.cpp
    - annlib_adaptbx/self_include/kd_tree.h
    - annlib_adaptbx/self_include/kd_util.cpp
    - annlib_adaptbx/self_include/kd_util.h
    - annlib_adaptbx/self_include/perf.cpp
    - annlib_adaptbx/self_include/pr_queue.h
    - annlib_adaptbx/self_include/pr_queue_k.h
  cbflib_adaptbx:
    - lib/pycbf.py
  gltbx:
    - gltbx/font_ucs_10x20.cpp
    - gltbx/font_ucs_8x13.cpp
    - gltbx/font_ucs_9x15.cpp
    - gltbx/FONTS_UCS_DONE_FLAG_FILE
    - gltbx/gl_defines_00_bpl.cpp
    - gltbx/gl_defines_01_bpl.cpp
    - gltbx/gl_defines_02_bpl.cpp
    - gltbx/gl_defines_03_bpl.cpp
    - gltbx/gl_defines_04_bpl.cpp
    - gltbx/gl_defines_05_bpl.cpp
    - gltbx/gl_defines_06_bpl.cpp
    - gltbx/gl_defines_07_bpl.cpp
    - gltbx/gl_functions_00_bpl.cpp
    - gltbx/gl_functions_01_bpl.cpp
    - gltbx/gl_functions_02_bpl.cpp
    - gltbx/gl_functions_03_bpl.cpp
    - gltbx/gl_functions_04_bpl.cpp
    - gltbx/gl_functions_05_bpl.cpp
    - gltbx/gl_functions_06_bpl.cpp
    - gltbx/gl_functions_07_bpl.cpp
    - gltbx/gl_functions_08_bpl.cpp
    - gltbx/gl_functions_09_bpl.cpp
    - gltbx/gl_functions_10_bpl.cpp
    - gltbx/gl_functions_11_bpl.cpp
    - gltbx/gl_functions_12_bpl.cpp
    - gltbx/gl_functions_13_bpl.cpp
    - gltbx/gl_functions_14_bpl.cpp
    - gltbx/gl_functions_15_bpl.cpp
    - gltbx/glu_defines_00_bpl.cpp
    - gltbx/glu_defines_01_bpl.cpp
    - gltbx/glu_functions_00_bpl.cpp
    - gltbx/glu_functions_01_bpl.cpp
    - gltbx/glu_functions_02_bpl.cpp
    - gltbx/glu_functions_03_bpl.cpp
  iotbx:
    - iotbx/pdb/hybrid_36_fem.cpp
  smtbx:
    - include/smtbx/boost_python/flex_fwd.h
